on:
  workflow_call:
    inputs:
      dockerRunArgs:
        type: string
        required: false
      appArgs:
        type: string
        required: false
      testEval:
        type: string
        required: false
        description: 'JavaScript expression to validate the output (included globals: result, inputs)'
        default: status === 0
      imageFolder:
        type: string
        required: false
        description: Folder to save the build to
      imageFile:
        type: string
        required: false
        description: File basename of image to save the build to
        default: image.tar
      imageArtifact:
        type: string
        required: false
        description: Name of the image artifact to save the build to
      imageIdentifier:
        type: string
        required: false
        description: Name and tag of the image to test
      nameSuffix:
        type: string
        required: false
        description: Suffix to append to the job name
      arch:
        type: string
        required: false
        description: Architecture to test
        default: linux/amd64
      id:
        type: string
        required: false
        description: ID of the image
jobs:
  test:
    name: test${{ inputs.nameSuffix }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v5.0.0
      - name: setupNode
        uses: actions/setup-node@v4.0.0
        with:
          node-version: latest
      - name: installNodePackages
        id: installNodePackages
        uses: jaid/action-npm-install@main
      - id: installWorkflowsScripts
        name: installWorkflowsScripts
        run: npm install --no-save --no-package-lock git://github.com/jaid/workflows.git#dist
      - id: getInputs
        run: node node_modules/@jaid/workflows-scripts/src/testDocker/getInputs.js
        env:
          inputs: ${{ toJSON(inputs) }}
          github: ${{ toJSON(github) }}
      - name: loadArtifact
        uses: actions/download-artifact@v5.0.0
        with:
          name: ${{ steps.getInputs.outputs.imageArtifact }}
          path: ${{ steps.getInputs.outputs.imageFolder }}
      - name: loadImage
        shell: bash
        env:
          imageFolder: ${{ steps.getInputs.outputs.imageFolder }}
          imageFile: ${{ steps.getInputs.outputs.imageFile }}
        run: |
            docker load --input "$imageFolder/$imageFile"
      - name: setupQemu
        if: ${{ steps.getInputs.outputs.arch != 'linux/amd64' }}
        uses: docker/setup-qemu-action@v3.6.0
        with:
          platforms: ${{ steps.getInputs.outputs.arch }}
      - id: runImage
        name: runImage
        run: node node_modules/@jaid/workflows-scripts/src/testDocker/runImage.js
        env:
          inputs: ${{ steps.getInputs.outputs.value }}
